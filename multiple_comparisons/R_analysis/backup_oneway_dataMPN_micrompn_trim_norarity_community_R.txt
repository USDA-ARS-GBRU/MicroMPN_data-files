library(tidyverse)
library(rstatix)
library(ggpubr)
library(outliers)
library(data.table)
library(gridExtra)
library(raster)
library(AICcmodavg)
library(car)
library(SimplyAgree)
library(gvlma)
library(dplyr)
library(data.table)
library(FSA)


#####One way anova and Tukey test ran with MPN data
##### Kruskal Wallis and Dunn's test ran with CFU data
data <- fread("data_micrompn_trim_norarity_community_R.csv", header = TRUE)
 
# Remove unwanted columns in R
df_CFU <- subset(data, select = -c(2,3,4)) 
df_MPN <- subset(data, select = -c(2,4,5))
# Get unique group names
groups <- unique(df_CFU$Sample)


#one way aov for CFU data
CFU_model <- aov(CFU ~ Sample, data = df_CFU)

CFU_oneway <- summary(CFU_model)

CFU_aov_df <- as.data.frame(CFU_oneway[[1]])

write.csv(CFU_aov_df,"communityCFU_oneway.csv", row.names = TRUE)

#checking the assumptions for CFU_model
# plot(CFU_model)
equalvariance_test_CFU <-leveneTest(CFU ~ Sample, data = df_CFU)
write.csv(equalvariance_test_CFU, "levenes_results_CFU.csv", row.names = FALSE) # write data frame to CSV file

# Testing normality of each group with Shapiro-Wilk test and visualizing the data

sw_test_CFU_aov <- lapply(groups, function(g) shapiro.test(df_CFU[df_CFU$Sample == g,]$CFU))
names(sw_test_CFU_aov) <- groups#this line of code assigns the group names as column names to the results of the Shapiro-Wilk test 
# Print results
cat("\nShapiro-Wilk test for normality:\n")
print(sw_test_CFU_aov)

sw_results_CFU_aov <- data.frame(Group = character(), Wvalue = numeric(), Pvalue = numeric(), stringsAsFactors = FALSE) # create an empty data frame to store the Shapiro-Wilk test results
for (i in 1:length(sw_test_CFU_aov )) {
  result <- data.frame(
    Group = names(sw_test_CFU_aov )[i],
    Wvalue = sw_test_CFU_aov [[i]]$statistic,
    Pvalue = sw_test_CFU_aov [[i]]$p.value
  )
  sw_results_CFU_aov <- rbind(sw_results_CFU_aov, result) # add result to data frame
}
write.csv(sw_results_CFU_aov, "sw_results_CFU_aov.csv", row.names = FALSE) # write data frame to CSV file



#post-hoc test for two way model
TK_data_CFU <- TukeyHSD(CFU_model, conf.level = .95)
TK_df_CFU <- as.data.frame(TK_data_CFU[[1]])
write.csv(TK_df_CFU,"CFU_tukeYtest.csv", row.names = TRUE)

# because the assumption of normality was not met, I am running a kruskal wallis test with the CFU data
kt <- kruskal.test(CFU ~ Sample, data = df_CFU)
wt <- pairwise.wilcox.test(CFU, Sample, p.adjust.method = "bonferroni", paired = FALSE, data = df_CFU)
#make column Sample into factor
df_CFU$Sample <- as.factor(df_CFU$Sample)

dunnt<- dunnTest(CFU ~ Sample, data = df_CFU, method = "bonferroni")


dunt_df <- as.data.frame(dunnt[[2]])
write.csv(dunt_df, "dunn_test_CFU.csv", row.names = FALSE) # write data frame to CSV file

###################################################Mpn data --trim positives no-rarity index

#one-way aov for MPN data 
MPN_model <- aov(MPN ~ Sample, data = df_MPN)

MPN_oneway <- summary(MPN_model)
MPN_aov_df <- as.data.frame(MPN_oneway[[1]])
write.csv(MPN_aov_df,"MPN_oneway.csv", row.names = TRUE)



#checking the assumptions for MPN_model
# plot(MPN_model)
equalvariance_test_mpn<-leveneTest(MPN ~ Sample, data = df_MPN)
write.csv(equalvariance_test_mpn, "levenes_results_MPN.csv", row.names = FALSE) # write data frame to CSV file

# Testing normality of each group with Shapiro-Wilk test and visualizing the data

sw_test_mpn <- lapply(groups, function(g) shapiro.test(df_MPN[df_MPN$Sample == g,]$MPN))
names(sw_test_mpn) <- groups
# Print results
cat("\nShapiro-Wilk test for normality:\n")
print(sw_test_mpn)

sw_results_mpn <- data.frame(Group = character(), Wvalue = numeric(), Pvalue = numeric(), stringsAsFactors = FALSE) # create an empty data frame to store the Shapiro-Wilk test results
for (i in 1:length(sw_test_mpn)) {
  result <- data.frame(
    Group = names(sw_test_mpn)[i],
    Wvalue = sw_test_mpn[[i]]$statistic,
    Pvalue = sw_test_mpn[[i]]$p.value
  )
  sw_results_mpn <- rbind(sw_results_mpn, result) # add result to data frame
}
write.csv(sw_results_mpn, "sw_results_mpn.csv", row.names = FALSE) # write data frame to CSV file


#post-hoc test for MPN model
TK_data_MPN <- TukeyHSD(MPN_model, conf.level = .95)
TK_df_MPN <- as.data.frame(TK_data_MPN[[1]])
write.csv(TK_df_MPN,"communityMPN_tukeYtest.csv", row.names = TRUE)


#per reviewer's request
#Dunnettâ€™s Test for Comparing Several Treatments With a Control: MPN & CFU
#make the contents of column Sample into a factor, otherwise there is an issue with specifying the control variable below
data$Sample <- as.factor(data$Sample)
dunnett_test_MPN = DunnettTest(x=data$MPN, g=data$Sample, control = "rfp-Rs5")
dunnett_test_CFU = DunnettTest(x=data$CFU, g=data$Sample, control = "rfp-Rs5")



